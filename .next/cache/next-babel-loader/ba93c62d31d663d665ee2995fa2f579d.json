{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from 'react';\nimport axios from 'axios'; // import { withRouter } from 'next/router';\n\nfunction Post(_ref) {\n  var id = _ref.id,\n      comments = _ref.comments;\n  return React.createElement(\"div\", null, React.createElement(\"h1\", null, \"You are looking at Post #\", id), comments.map(function (comment) {\n    return React.createElement(Comment, _extends({}, comment, {\n      key: comment.id\n    }));\n  }));\n}\n\nfunction Comment(_ref2) {\n  var email = _ref2.email,\n      body = _ref2.body;\n  return React.createElement(\"div\", null, React.createElement(\"h5\", null, email), React.createElement(\"p\", null, body));\n}\n\nPost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref3) {\n    var query, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref3.query;\n            _context.next = 3;\n            return axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=\".concat(query.id));\n\n          case 3:\n            res = _context.sent;\n            data = res.data;\n            return _context.abrupt(\"return\", _objectSpread({}, query, {\n              comments: data\n            }));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexport default Post; // export default withRouter(post);\n// Can also get the query info by using withRouter","map":{"version":3,"sources":["/Users/uodenpa/Courses/cs-react/modern-react-first-next/pages/post.js"],"names":["React","axios","Post","id","comments","map","comment","Comment","email","body","getInitialProps","query","get","res","data"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,SAASC,IAAT,OAAgC;AAAA,MAAhBC,EAAgB,QAAhBA,EAAgB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC9B,SACE,iCACE,6DAA8BD,EAA9B,CADF,EAEGC,QAAQ,CAACC,GAAT,CAAa,UAAAC,OAAO;AAAA,WACnB,oBAAC,OAAD,eAAaA,OAAb;AAAsB,MAAA,GAAG,EAAEA,OAAO,CAACH;AAAnC,OADmB;AAAA,GAApB,CAFH,CADF;AAQD;;AAED,SAASI,OAAT,QAAkC;AAAA,MAAfC,KAAe,SAAfA,KAAe;AAAA,MAARC,IAAQ,SAARA,IAAQ;AAChC,SACE,iCACE,gCAAKD,KAAL,CADF,EAEE,+BAAIC,IAAJ,CAFF,CADF;AAMD;;AAEDP,IAAI,CAACQ,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,YAAAA,KAAjB,SAAiBA,KAAjB;AAAA;AAAA,mBACHV,KAAK,CAACW,GAAN,gEAAkED,KAAK,CAACR,EAAxE,EADG;;AAAA;AACfU,YAAAA,GADe;AAEbC,YAAAA,IAFa,GAEJD,GAFI,CAEbC,IAFa;AAAA,+DAGTH,KAHS;AAGFP,cAAAA,QAAQ,EAAEU;AAHR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeZ,IAAf,C,CACA;AAEA","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n// import { withRouter } from 'next/router';\n\nfunction Post({ id, comments }) {\n  return (\n    <div>\n      <h1>You are looking at Post #{id}</h1>\n      {comments.map(comment => (\n        <Comment {...comment} key={comment.id} />\n      ))}\n    </div>\n  );\n}\n\nfunction Comment({ email, body }) {\n  return(\n    <div>\n      <h5>{email}</h5>\n      <p>{body}</p>\n    </div>\n  );\n}\n\nPost.getInitialProps = async function({ query }) {\n  const res = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${query.id}`);\n  const { data } = res;\n  return { ...query, comments: data };\n}\n\nexport default Post;\n// export default withRouter(post);\n\n// Can also get the query info by using withRouter\n"]},"metadata":{},"sourceType":"module"}